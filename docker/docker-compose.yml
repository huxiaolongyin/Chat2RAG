name: chat2rag
services:
  backend:
    image: jacob0827/chat2rag-backend:latest
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ${DATA_PATH}/phoenix:/.phoenix
      - ${LOG_PATH}:/code/logs
    depends_on:
      - qdrant
    environment:
      - TZ=Asia/Shanghai
      - QDRANT_HOST=qdrant
    env_file:
      - ../.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/health" ]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 30s
    networks:
      - chat2rag-network
    restart: always

  frontend:
    image: jacob0827/chat2rag-frontend:latest
    container_name: frontend
    ports:
      - "8501:8501"
    depends_on:
      - backend
    environment:
      - TZ=Asia/Shanghai
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8501" ]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 30s
    networks:
      - chat2rag-network
    restart: always

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    healthcheck:
      test: [ "CMD", "/bin/bash", "-c", '</dev/tcp/localhost/6333' ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ${DATA_PATH}/qdrant_storage:/qdrant/storage
    env_file:
      - ../.env
    networks:
      - chat2rag-network
    restart: always

  postgresql:
    image: timescale/timescaledb:latest-pg17-bitnami
    container_name: postgresql
    ports:
      - "5432:5432"
    volumes:
      - ${DATA_PATH}/postgresql:/bitnami/postgresql
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_SHARED_BUFFERS=1GB # 设置数据库共享内存缓冲区大小，建议设置为服务器内存的25%，更大的值可以提高读取性能
      - POSTGRESQL_MAX_CONNECTIONS=50 # 控制数据库最大并发连接数，需要根据服务器资源和应用需求设置
    env_file:
      - ../.env
    networks:
      - chat2rag-network
    restart: always
  mysql:
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/mysql:8.0.36 # 阿里云
    image: mysql:8.0.36
    container_name: mysql
    restart: always
    # ports:
    #   - 7586:3306
    networks:
      - chat2rag-network
    command: --default-authentication-plugin=mysql_native_password
    environment:
      # 默认root密码，仅首次运行有效
      MYSQL_ROOT_PASSWORD: Aa@123123
      MYSQL_DATABASE: oneapi
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
  oneapi:
    container_name: oneapi
    image: ghcr.io/songquanpeng/one-api:v0.6.7
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/one-api:v0.6.6 # 阿里云
    ports:
      - 3001:3000
    depends_on:
      - mysql
    networks:
      - chat2rag-network
    restart: always
    environment:
      # mysql 连接参数
      - SQL_DSN=root:Aa@123123@tcp(mysql:3306)/oneapi
      # 登录凭证加密密钥
      - SESSION_SECRET=oneapikey
      # 内存缓存
      - MEMORY_CACHE_ENABLED=true
      # 启动聚合更新，减少数据交互频率
      - BATCH_UPDATE_ENABLED=true
      # 聚合更新时长
      - BATCH_UPDATE_INTERVAL=10
      # 初始化的 root 密钥（建议部署完后更改，否则容易泄露）
      - INITIAL_ROOT_TOKEN=mygpt
    volumes:
      - ${DATA_PATH}/oneapi:/data
  # xinference:
  #   image: xprobe/xinference:v1.1.1-cpu
  #   container_name: embedding-service
  #   ports:
  #     - "9998:9997"
  #   volumes:
  #     - ${MODEL_PATH}:/opt/model
  #     - ../scripts:/scripts
  #   environment:
  #     - XINFERENCE_HOME=/opt/model
  #     - XINFERENCE_MODEL_SRC=modelscope
  #   env_file:
  #     - ../.env
  #   command: xinference-local -H 0.0.0.0 --log-level debug
  #   networks:
  #     - chat2rag-network
  #   restart: always

networks:
  chat2rag-network:
    driver: bridge
